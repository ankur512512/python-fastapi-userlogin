name: ci

on:
  push:
  workflow_dispatch:

jobs:
  ci:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        
      # - name: Set up QEMU
      #   id: qemu
      #   uses: docker/setup-qemu-action@v2
      #   with:
      #     image: tonistiigi/binfmt:latest
      #     platforms: linux/amd64,linux/arm64

      # - name: Available platforms
      #   run: echo "Building for linux/amd64 and linux/arm64"

      # - name: Set up Docker Buildx
      #   uses: docker/setup-buildx-action@v2

      # - name: Login to DockerHub
      #   uses: docker/login-action@v3
      #   with:
      #     username: ${{ secrets.DOCKER_USERNAME }}
      #     password: ${{ secrets.DOCKER_PASSWORD }}

      # - name: Build images
      #   run: |
      #     docker buildx build --platform linux/amd64,linux/arm64 -t ankur512512/python-fastapi-backend:"$GITHUB_SHA" ./backend
      #     docker buildx build --platform linux/amd64,linux/arm64 -t ankur512512/python-fastapi-frontend:"$GITHUB_SHA" ./frontend
      #     docker buildx build -t ankur512512/python-fastapi-backend:"$GITHUB_SHA" ./backend --load
      #     docker buildx build -t ankur512512/python-fastapi-frontend:"$GITHUB_SHA" ./frontend --load
      #     docker images
      # - name: Run Trivy vulnerability scanner for frontend image
      #   uses: aquasecurity/trivy-action@0.28.0
      #   env:
      #     TRIVY_DISABLE_VEX_NOTICE: true
      #   with:
      #     image-ref: 'ankur512512/python-fastapi-frontend:${{ github.sha }}'
      #     format: 'table'
      #     exit-code: '1'
      #     ignore-unfixed: true
      #     vuln-type: 'os,library'
      #     severity: 'CRITICAL,HIGH'
      # - name: Run Trivy vulnerability scanner for backend image
      #   uses: aquasecurity/trivy-action@0.28.0
      #   env:
      #     TRIVY_DISABLE_VEX_NOTICE: true
      #   with:
      #     image-ref: 'ankur512512/python-fastapi-backend:${{ github.sha }}'
      #     format: 'table'
      #     exit-code: '1'
      #     ignore-unfixed: true
      #     vuln-type: 'os,library'
      #     severity: 'CRITICAL,HIGH'
      # - name: Build & Publish images # Unfortunately there is no way to ONLY PUSH the images with buildx, so we build again and push
      #   run: |
      #     docker buildx build --platform linux/amd64,linux/arm64 -t ankur512512/python-fastapi-backend:"$GITHUB_SHA" --push ./backend
      #     docker buildx build --platform linux/amd64,linux/arm64 -t ankur512512/python-fastapi-frontend:"$GITHUB_SHA" --push ./frontend    
      - name: Checkout infrarepo
        uses: actions/checkout@v4
        with:
          repository: ankur512512/argocd-python-userlogin
          token: ${{ secrets.REPO_ACCESS_TOKEN }}  # Personal Access Token with repo write access
          path: argocd-python-userlogin
      - name: Update Image Version in the related HelmChart values.yaml
        uses: OpsVerseIO/image-updater-action@0.1.0
        with:
          valueFile: 'values.yaml'
          # propertyPath: 'deployment.backend.image.tag'
          # value: ${{ github.sha }}
          repository: ankur512512/argocd-python-userlogin
          branch: main
          targetBranch: main
          createPR: false
          message: 'Bumping image tags to ${{ github.sha }}'
          token: ${{ secrets.REPO_ACCESS_TOKEN }}
          workDir: argocd-python-userlogin
          masterBranchName: main
          force: true
          changes: |
            {
              "deployment.backend.image.tag": "${{ github.sha }}"
              "deployment.frontend.image.tag": "${{ github.sha }}"
            }
